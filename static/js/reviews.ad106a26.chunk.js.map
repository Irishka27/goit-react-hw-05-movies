{"version":3,"file":"static/js/reviews.ad106a26.chunk.js","mappings":"6PACA,EAAuB,sBAAvB,EAAsD,wBAAtD,EAAuF,wB,SCOxE,SAASA,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,UAASG,EAAAA,EAAAA,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BL,EAAAA,EAAAA,UAAS,MAAnC,eAAOM,EAAP,KAAcC,EAAd,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,eACkBX,GACfY,MAAK,SAAAC,GACmB,IAAnBA,EAAQC,QAIZV,EAAWS,GACXN,EAAUF,EAAAA,EAAAA,WAJRE,EAAUF,EAAAA,EAAAA,SAMbU,OAAM,SAAAP,GACLC,EAASD,GACTD,EAAUF,EAAAA,EAAAA,eAEb,CAACL,EAASQ,KAGX,gCACGF,IAAWD,EAAAA,EAAAA,UAAkB,SAACW,EAAA,EAAD,IAE7BV,IAAWD,EAAAA,EAAAA,WAAmB,SAACY,EAAA,EAAD,CAAgBC,QAASV,IAEvDF,IAAWD,EAAAA,EAAAA,WACV,eAAIc,UAAWC,EAAf,SACGjB,EAAQkB,KAAI,SAAAC,GAAM,OACjB,gBAAoBH,UAAWC,EAA/B,WACE,eAAID,UAAWC,EAAf,SAA+BE,EAAOC,UACtC,uBAAID,EAAOE,YAFJF,EAAOG,SASrBnB,IAAWD,EAAAA,EAAAA,OACV,wBACE,uEAGHC,IAAWD,EAAAA,EAAAA,WAAmB,uBAAIG,EAAMU","sources":["webpack://goit-react-hw-05-movies/./src/views/Reviews/Reviews.module.css?ff11","views/Reviews/Reviews.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Reviews_item__Nzdax\",\"author\":\"Reviews_author__NQfuB\",\"review\":\"Reviews_review__pUZcK\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ErrorComponent from 'components/Error';\nimport apiService from '../../services/apiService';\nimport Loader from 'components/Loader';\nimport Status from '../../services/status';\nimport styles from './Reviews.module.css';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    apiService\n      .getMovieReview(movieId)\n      .then(results => {\n        if (results.length === 0) {\n          setStatus(Status.IDLE);\n          return;\n        }\n        setReviews(results);\n        setStatus(Status.RESOLVED);\n      })\n      .catch(error => {\n        setError(error);\n        setStatus(Status.REJECTED);\n      });\n  }, [movieId, error]);\n\n  return (\n    <>\n      {status === Status.PENDING && <Loader />}\n\n      {status === Status.REJECTED && <ErrorComponent message={error} />}\n\n      {status === Status.RESOLVED && (\n        <ul className={styles.review}>\n          {reviews.map(review => (\n            <li key={review.id} className={styles.item}>\n              <h2 className={styles.author}>{review.author}</h2>\n              <p>{review.content}</p>\n          \n              \n            </li>\n          ))}\n        </ul>\n      )}\n      {status === Status.IDLE && (\n        <p>\n          <i>We don't have any reviews for this movie.</i>\n        </p>\n      )}\n      {status === Status.REJECTED && <p>{error.message}</p>}\n    </>\n  );\n}\n"],"names":["Reviews","movieId","useParams","useState","reviews","setReviews","Status","status","setStatus","error","setError","useEffect","apiService","then","results","length","catch","Loader","Error","message","className","styles","map","review","author","content","id"],"sourceRoot":""}