{"version":3,"file":"static/js/cast.3dfab407.chunk.js","mappings":"uQACA,EAAuB,mBAAvB,EAAqD,uBAArD,EAAsF,sBAAtF,EAAmH,mBAAnH,EAAkJ,wB,SCQnI,SAASA,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,UAASK,EAAAA,EAAAA,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,YACeX,GACZY,MAAK,SAAAC,GACgB,IAAhBA,EAAKC,QAITV,EAAUS,GACVJ,EAAUF,EAAAA,EAAAA,WAJRE,EAAUF,EAAAA,EAAAA,SAObQ,OAAM,SAAAV,GACLW,QAAQC,IAAIZ,GACZC,EAASD,GACTI,EAAUF,EAAAA,EAAAA,eAEb,CAACP,EAASK,KAGX,gCACGG,IAAWD,EAAAA,EAAAA,UAAkB,SAACW,EAAA,EAAD,IAE7BV,IAAWD,EAAAA,EAAAA,WAAmB,SAACY,EAAA,EAAD,IAE9BX,IAAWD,EAAAA,EAAAA,WACV,eAAIa,UAAWC,EAAf,SACGlB,EAAOmB,KAAI,SAAAC,GAAK,OACf,gBAAmBH,UAAWC,EAA9B,WACE,gBACEG,IACED,EAAME,aAAN,0CACuCF,EAAME,cACzCC,EAENC,IAAKJ,EAAMK,cACXR,UAAWC,KAEb,eAAID,UAAWC,EAAf,SAA6BE,EAAMK,iBACnC,cAAGR,UAAWC,EAAd,SAAiCE,EAAMM,cAXhCN,EAAMO,SAgBpBtB,IAAWD,EAAAA,EAAAA,OACV,wBACE","sources":["webpack://goit-react-hw-05-movies/./src/views/Cast/Cast.module.css?f355","views/Cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast\":\"Cast_cast__4bEWn\",\"castItem\":\"Cast_castItem__Jdv3A\",\"castImg\":\"Cast_castImg__YPphm\",\"name\":\"Cast_name__1PqOC\",\"character\":\"Cast_character__8TC1h\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport apiService from '../../services/apiService';\nimport Status from '../../services/status';\nimport Loader from 'components/Loader';\nimport ErrorComponent from 'components/Error';\nimport noPhoto from '../../img/no_image.jpg';\nimport styles from './Cast.module.css';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState(null);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n\n  useEffect(() => {\n    apiService\n      .getCastInfo(movieId)\n      .then(cast => {\n        if (cast.length === 0) {\n          setStatus(Status.IDLE);\n          return;\n        }\n        setActors(cast);\n        setStatus(Status.RESOLVED);\n      })\n\n      .catch(error => {\n        console.log(error);\n        setError(error);\n        setStatus(Status.REJECTED);\n      });\n  }, [movieId, error]);\n\n  return (\n    <>\n      {status === Status.PENDING && <Loader />}\n\n      {status === Status.REJECTED && <ErrorComponent />}\n\n      {status === Status.RESOLVED && (\n        <ul className={styles.cast}>\n          {actors.map(actor => (\n            <li key={actor.id} className={styles.castItem}>\n              <img\n                src={\n                  actor.profile_path\n                    ? `https://image.tmdb.org/t/p/w500/${actor.profile_path}`\n                    : noPhoto\n                }\n                alt={actor.original_name}\n                className={styles.castImg}\n              />\n              <h4 className={styles.name}>{actor.original_name}</h4>\n              <p className={styles.character}>{actor.character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n      {status === Status.IDLE && (\n        <p>\n          <i> We don't have any cast for this movie.</i>\n        </p>\n      )}\n    </>\n  );\n}\n"],"names":["Cast","movieId","useParams","useState","actors","setActors","error","setError","Status","status","setStatus","useEffect","apiService","then","cast","length","catch","console","log","Loader","Error","className","styles","map","actor","src","profile_path","noPhoto","alt","original_name","character","id"],"sourceRoot":""}