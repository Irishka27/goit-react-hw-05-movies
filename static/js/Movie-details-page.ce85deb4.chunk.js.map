{"version":3,"file":"static/js/Movie-details-page.ce85deb4.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Error/Error.module.css?141d","components/Error/Error.jsx","services/apiService.js","services/status.js","webpack://goit-react-hw-05-movies/./src/views/MovieDetailsPage/MovieDetailsPage.module.css?8c08","views/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Error_wrapper__AOSzo\",\"text\":\"Error_text__FJVYL\"};","import PropTypes from 'prop-types';\nimport errorImage from '../../img/no_results_found.png';\nimport style from'./Error.module.css';\n\nexport default function ErrorComponent({ message }) {\n  return (\n    <div role=\"alert\" className={style.wrapper}>\n      <img src={errorImage} width=\"400\" alt=\"no results found\" />\n      <p text={message} className={style.text}>\n        {message}\n      </p>\n    </div>\n  );\n}\n\nErrorComponent.propTypes = {\n  message: PropTypes.string,\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '92ffb34e08e714eb390805a25b0a06d3';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nasync function getPopularMovies(page) {\n  try {\n    const config = {\n      url: `trending/movie/day`,\n      params: {\n        page,\n      },\n    };\n    const { data } = await axios(config, page);\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\nasync function getMoviesByKeyWord(query, page) {\n  try {\n    const config = {\n      url: `search/movie`,\n      params: {\n        query,\n        page,\n      },\n    };\n    const { data } = await axios(config, query, page);\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\nasync function getMovieById(id) {\n  try {\n    const config = {\n      url: `movie/${id}`,\n    };\n    const { data } = await axios(config, id);\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\nasync function getCastInfo(id) {\n  try {\n    const config = {\n      url: `movie/${id}/credits`,\n    };\n    const { data } = await axios(config, id);\n    return data.cast;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\nasync function getMovieReview(id) {\n  try {\n    const config = {\n      url: `movie/${id}/reviews`,\n    };\n    const { data } = await axios(config, id);\n    return data.results;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\nconst apiService = {\n  getPopularMovies,\n  getMoviesByKeyWord,\n  getMovieById,\n  getCastInfo,\n  getMovieReview,\n};\n\nexport default apiService;\n","const Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport default Status;\n","// extracted by mini-css-extract-plugin\nexport default {\"movies\":\"MovieDetailsPage_movies__UmKjr\",\"about\":\"MovieDetailsPage_about__sGZTu\",\"overview\":\"MovieDetailsPage_overview__nnQR5\",\"description\":\"MovieDetailsPage_description__5izXs\",\"navigation\":\"MovieDetailsPage_navigation__obXQG\",\"information\":\"MovieDetailsPage_information__mE2iv\",\"link\":\"MovieDetailsPage_link__GbpAo\",\"activeLink\":\"MovieDetailsPage_activeLink__SFnbD MovieDetailsPage_link__GbpAo\",\"button\":\"MovieDetailsPage_button__zHx70\",\"mainTitle\":\"MovieDetailsPage_mainTitle__ue1Zk\",\"title\":\"MovieDetailsPage_title__beq+9\",\"genre\":\"MovieDetailsPage_genre__EE36s\",\"score\":\"MovieDetailsPage_score__jWTyn\"};","import { useState, useEffect, Suspense, lazy } from 'react';\nimport {\n  NavLink,\n  useParams,\n  useRouteMatch,\n  Switch,\n  Route,\n  useHistory,\n  useLocation,\n} from 'react-router-dom';\n\nimport apiService from '../../services/apiService';\nimport Status from '../../services/status';\nimport Loader from 'components/Loader';\nimport ErrorComponent from 'components/Error';\nimport noPhoto from '../../img/no_image.jpg';\nimport styles from './MovieDetailsPage.module.css';\n\nconst Cast = lazy(() => import('../Cast' /* webpackChunkName: \"cast\"*/));\nconst Reviews = lazy(() =>\n  import('../Reviews' /* webpackChunkName: \"reviews\"*/),\n);\n\nexport default function MovieDetailsPage() {\n  const history = useHistory();\n  const location = useLocation();\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const { url, path } = useRouteMatch();\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n\n  useEffect(() => {\n    setStatus(Status.PENDING);\n    apiService\n      .getMovieById(movieId)\n      .then(data => {\n        setMovie(data);\n        setStatus(Status.RESOLVED);\n      })\n      .catch(error => {\n        console.log(error);\n        setError('Something went wrong. Please try again.');\n        setStatus(Status.REJECTED);\n      });\n  }, [movieId, error]);\n\n  const onGoBack = () => {\n    history.push(location?.state?.from?.location ?? '/');\n  };\n\n  return (\n    <>\n      {status === Status.PENDING && <Loader />}\n\n      {status === Status.REJECTED && <ErrorComponent />}\n\n      {status === Status.RESOLVED && (\n        <>\n          <button type=\"button\" className={styles.button} onClick={onGoBack}>\n            &#8656;&ensp; Go back\n          </button>\n          <div className={styles.movies}>\n            <img\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                  : noPhoto\n              }\n              alt={movie.title}\n              width=\"250\"\n            />\n            <div className={styles.about}>\n              <h1 className={styles.mainTitle}>{movie.title} </h1>\n              <p className={styles.score}>\n                User Score: {movie.vote_average * 10}%\n              </p>\n              <h3 className={styles.title}>\n                Overview\n                <span className={styles.description}>{movie.overview}</span>\n              </h3>\n              {movie.genres && (\n                <>\n                  <h3 className={styles.title}>Genres</h3>\n                  <ul className={styles.genre}>\n                    {movie.genres.map(genre => (\n                      <li key={genre.id}>{genre.name}</li>\n                    ))}\n                  </ul>\n                </>\n              )}\n            </div>\n          </div>\n\n          <nav className={styles.navigation}>\n            <p className={styles.information}>Additional information</p>\n\n            <NavLink\n              to={{\n                pathname: `${url}/cast`,\n                state: { from: { location } },\n              }}\n              className={styles.link}\n              activeClassName={styles.activeLink}\n            >\n              Cast\n            </NavLink>\n\n            <NavLink\n              to={{\n                pathname: `${url}/reviews`,\n                state: { from: { location } },\n              }}\n              className={styles.link}\n              activeClassName={styles.activeLink}\n            >\n              Reviews\n            </NavLink>\n          </nav>\n\n          <Suspense fallback={<Loader />}>\n            <Switch>\n              <Route path={`${path}/cast`}>\n                {status === Status.RESOLVED && <Cast />}\n              </Route>\n\n              <Route path={`${path}/reviews`}>\n                {status === Status.RESOLVED && <Reviews />}\n              </Route>\n            </Switch>\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n}\n"],"names":["ErrorComponent","message","role","className","style","src","errorImage","width","alt","text","getPopularMovies","page","config","url","params","axios","data","console","log","error","getMoviesByKeyWord","query","getMovieById","id","getCastInfo","cast","getMovieReview","results","api_key","language","apiService","IDLE","PENDING","RESOLVED","REJECTED","Cast","lazy","Reviews","MovieDetailsPage","history","useHistory","location","useLocation","useState","movie","setMovie","movieId","useParams","useRouteMatch","path","setError","Status","status","setStatus","useEffect","then","catch","Loader","Error","type","styles","onClick","push","state","from","poster_path","noPhoto","title","vote_average","overview","genres","map","genre","name","to","pathname","activeClassName","Suspense","fallback"],"sourceRoot":""}